apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId "com.forrestguice.suntimescalendars"
        //noinspection MinSdkTooLow
        minSdkVersion 11
        //noinspection ExpiredTargetSdkVersion,OldTargetApi
        targetSdkVersion 25
        versionCode 17
        versionName "0.5.7"

        buildConfigField "String", "GIT_HASH", "\"${getGitHash()}\""

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions
    {
        disable 'MissingTranslation'
    }
}

dependencies {
    implementation 'com.android.support:design:25.4.0'
    implementation 'com.android.support:appcompat-v7:25.4.0'
    implementation 'com.android.support:support-compat:25.4.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.github.forrestguice:colorpicker:0.0.13post1'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.jraska:falcon:1.0.4'
    androidTestImplementation 'com.android.support:support-annotations:25.4.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    resolutionStrategy {
        force 'com.android.support:support-annotations:25.4.0'
    }
}

def getGitHash()
{
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}
